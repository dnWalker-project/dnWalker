// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace dnWalker.TestGenerator.XUnitFramework
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using dnWalker.TypeSystem;
    using dnWalker.Parameters;
    using dnWalker.TestGenerator.Parameters;
    using dnWalker.TestGenerator.TestClasses;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnitFramework\XUnitTestClassTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    internal partial class XUnitTestClassTemplate : Templates.TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            
            #line 11 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnitFramework\XUnitTestClassTemplate.tt"
 
	// basic namespaces

            
            #line default
            #line hidden
            this.Write("using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing Syste" +
                    "m.Text;\r\nusing System.Threading.Tasks;\r\n");
            
            #line 19 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnitFramework\XUnitTestClassTemplate.tt"

	// test namespaces

            
            #line default
            #line hidden
            this.Write("using FluentAssertions;\r\nusing Xunit;\r\nusing Moq;\r\n");
            
            #line 25 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnitFramework\XUnitTestClassTemplate.tt"

	// parameter namespaces
	foreach (string nsName in Context.GetNamespaces())
	{

            
            #line default
            #line hidden
            this.Write("using ");
            
            #line 30 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnitFramework\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(nsName));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 31 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnitFramework\XUnitTestClassTemplate.tt"

	}

            
            #line default
            #line hidden
            
            #line 34 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnitFramework\XUnitTestClassTemplate.tt"

	// test class declaration

            
            #line default
            #line hidden
            this.Write("namespace ");
            
            #line 37 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnitFramework\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Context.TestNamespaceName));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n");
            
            #line 39 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnitFramework\XUnitTestClassTemplate.tt"
 PushIndent(); 
            
            #line default
            #line hidden
            this.Write("public class ");
            
            #line 40 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnitFramework\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Context.TestClassName));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n");
            
            #line 42 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnitFramework\XUnitTestClassTemplate.tt"
 PushIndent(); 
            
            #line default
            #line hidden
            
            #line 43 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnitFramework\XUnitTestClassTemplate.tt"

	// for each assertion schema generate a test method
	int i = 1;
	foreach (AssertionSchema schema in Context.GetSchemas())
	{

            
            #line default
            #line hidden
            this.Write("[Fact]\r\npublic void Test_");
            
            #line 50 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnitFramework\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i));
            
            #line default
            #line hidden
            this.Write("_");
            
            #line 50 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnitFramework\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetSchemaName(schema)));
            
            #line default
            #line hidden
            this.Write("()\r\n{\r\n");
            
            #line 52 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnitFramework\XUnitTestClassTemplate.tt"
 PushIndent(); 
            
            #line default
            #line hidden
            this.Write("// arrange\r\n");
            
            #line 54 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnitFramework\XUnitTestClassTemplate.tt"
 WriteArrange(schema); 
            
            #line default
            #line hidden
            this.Write("// act\r\n");
            
            #line 56 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnitFramework\XUnitTestClassTemplate.tt"
 WriteAct(schema); 
            
            #line default
            #line hidden
            this.Write("// assert\r\n");
            
            #line 58 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnitFramework\XUnitTestClassTemplate.tt"
 WriteAssert(schema); 
            
            #line default
            #line hidden
            
            #line 59 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnitFramework\XUnitTestClassTemplate.tt"
 PopIndent(); 
            
            #line default
            #line hidden
            this.Write("}\r\n");
            
            #line 61 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnitFramework\XUnitTestClassTemplate.tt"

		++i;
	}

            
            #line default
            #line hidden
            
            #line 65 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnitFramework\XUnitTestClassTemplate.tt"
 PopIndent(); 
            
            #line default
            #line hidden
            this.Write("}\r\n");
            
            #line 67 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnitFramework\XUnitTestClassTemplate.tt"
 PopIndent(); 
            
            #line default
            #line hidden
            this.Write("}\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 69 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnitFramework\XUnitTestClassTemplate.tt"

        private static string GetSchemaName(AssertionSchema schema)
        {
            switch (schema)
            {
                case ExceptionSchema exception: 
                    return "Exception";
                
                case ReturnValueSchema retValue: 
                    return "ReturnValue";

                case ArrayElementSchema arrayElement: 
                    return $"ArrayElements_{arrayElement.InputState.Reference}";

                case ObjectFieldSchema objectField: 
                    return $"FieldValues_{objectField.InputState.Reference}";

                default: 
                    throw new ArgumentException($"Unexpected schema type: {schema.GetType().Name}", nameof(schema));
            }
    	}

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
}
