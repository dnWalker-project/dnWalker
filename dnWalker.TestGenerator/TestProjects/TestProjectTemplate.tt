<#@ template debug="false" hostspecific="false" language="C#" visibility="internal" inherits="Templates.TemplateBase<ITestProjectContext>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<# ITestProjectContext context = Context; #>
<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
<#
	if (context.Targets.Count == 0)
	{
#>
        <TargetFramework>net6.0</TargetFramework>
<#
	}
	else if (Context.Targets.Count == 1)
	{
#>
        <TargetFramework><#= context.Targets[0] #></TargetFramework>
<#
	}
	else
	{
#>
        <TargetFrameworks><#= JoinTokens(context.Targets) #></TargetFrameworks>
<#
	}
#>
        <IsPackable>false</IsPackable>
        <Nullable><#= context.NullableEnable ? "enable" : "disable" #></Nullable>
    </PropertyGroup>

<# 
	// package references 
	if (context.PackageReferencies.Count > 0)
	{
#>
    <ItemGroup>
<#
		foreach (PackageReference p in context.PackageReferencies)
		{
			WritePackageReference(p);
		}
#>
    </ItemGroup>

<#
	}

	// project references
	if (context.ProjectReferencies.Count > 0)
	{
#>
    <ItemGroup>
<#
		foreach (string project in context.ProjectReferencies)
		{
			WriteProjectReference(project);
		}
#>
    </ItemGroup>

<#
	}
	// service references
	if (context.Services.Count > 0)
	{
#>
    <ItemGroup>
<#
		foreach (Guid s in context.Services)
		{
			WriteServiceReference(s);
		}
#>
    </ItemGroup>
<#
	}
#>
</Project>
<#+
	private static string JoinTokens(IEnumerable<string> tokens)
	{
		return string.Join("; ", tokens);
	}
#>
<#+
	private void WritePackageReference(PackageReference p)
	{
#>
        <PackageReference Include="<#= p.Name #>" Version="<#= p.Version #>"<#+
		if (p.IncludeAssets.Count > 0 || p.ExcludeAssets.Count > 0 || p.PrivateAssets.Count > 0)
		{
#>>
<#+
			if (p.IncludeAssets.Count > 0)
			{
#>
            <IncludeAssets><#= JoinTokens(p.IncludeAssets) #></IncludeAssets>
<#+
			}
			if (p.ExcludeAssets.Count > 0)
			{
#>
            <ExcludeAssets><#= JoinTokens(p.ExcludeAssets) #></ExcludeAssets>
<#+
			}
			if (p.PrivateAssets.Count > 0)
			{
#>
            <PrivateAssets><#= JoinTokens(p.PrivateAssets) #></PrivateAssets>
<#+
			}
#>
        </PackageReference>
<#+
		}
		else
		{
#> />
<#+
		}
	}
#>
<#+
	private void WriteProjectReference(string project)
	{
#>
        <ProjectReference Include="<#= project #>" />
<#+
	}
#>
<#+
	private void WriteServiceReference(Guid serviceGuid)
	{
#>
        <Service Include="{<#= serviceGuid #>}" />
<#+
	}
#>