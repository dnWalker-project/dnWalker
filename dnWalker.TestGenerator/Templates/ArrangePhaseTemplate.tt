<#@ template language="C#" linepragmas="false" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="dnWalker.TestGenerator.Parameters" #>
<#@ output extension=".txt" #>
<#@ include file="TypeNameTemplate.tt" once="true" #>
<#@ include file="GeneratorContext.tt" once="true" #>
<#@ include file="ArrangePhaseTemplate.SimpleDependency.tt" once="true" #>
<#@ include file="ArrangePhaseTemplate.ComplexDependency.tt" once="true" #>
<#+
		protected void WriteArrangeCode(Dependency dependency)
		{
			
			
			void WriteComplexDependencyArrange(ComplexDependency complexDependency)
			{
			}


			if (dependency is SimpleDependency simpleDependency)
			{
				WriteSimpleDepencencyArrange(simpleDependency);
			}
			else if (dependency is ComplexDependency complexDependency)
			{
				WriteComplexDependencyArrange(complexDependency);
			}

		}
#>