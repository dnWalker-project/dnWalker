// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace dnWalker.TestGenerator.XUnit
{
    using System.Linq;
    using System.Text;
    using System.Reflection;
    using System.Collections.Generic;
    using System.Diagnostics;
    using dnWalker.Parameters;
    using dnWalker.TestGenerator.Reflection;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class XUnitTestClassTemplate : XUnitTestClassTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("// This file was generated by dnWalker.TestGenerator tool ");
            
            #line 10 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DateTime.Now.ToString("dd/MM/yyyy - HH:mm:ss")));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 11 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

	// TODO: get nullable status from TestData 

            
            #line default
            #line hidden
            this.Write("#nullable enable\r\n\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing Syste" +
                    "m.IO;\r\nusing System.Linq;\r\nusing System.Text;\r\n\r\nusing FluentAssertions;\r\n\r\nusin" +
                    "g Xunit;\r\n\r\n");
            
            #line 26 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
 
	// setup custom tool for accessing private fields - cannot access base class fields... https://github.com/cactuaroid/PrivateObjectExtensions ?

            
            #line default
            #line hidden
            this.Write("using Moq;\r\n\r\nnamespace ");
            
            #line 31 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TestData.TestNamespaceName));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n\tpublic class ");
            
            #line 33 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TestData.TestClassName));
            
            #line default
            #line hidden
            this.Write("\r\n\t{\r\n\t\t#region Test Methods\r\n");
            
            #line 36 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

	foreach (var iteration in TestData.ExplorationData.Iterations)
	{

            
            #line default
            #line hidden
            this.Write("\r\n\t\t[Fact]\r\n\t\tpublic void Test_Iteration_");
            
            #line 42 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(iteration.Number));
            
            #line default
            #line hidden
            this.Write("()\r\n\t\t{\r\n\t\t\t// construct all input parameters which are used in the test\r\n\t\t\t// T" +
                    "ODO: construct return value comparer instance\r\n");
            
            #line 46 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

		List<IObjectParameter> objectsToInitialize = new List<IObjectParameter>();
		List<IArrayParameter> arraysToInitialize = new List<IArrayParameter>();
		IParameterSet startingCtx = iteration.StartingParameterContext;
		IParameterSet endingCtx = iteration.EndingParameterContext;

		foreach (var keyValue in startingCtx.Parameters)
		{
			if (keyValue.Value is IPrimitiveValueParameter pv)
			{

            
            #line default
            #line hidden
            this.Write("\t\t\t");
            
            #line 57 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pv.Type));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 57 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetVariableName(keyValue.Value)));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 57 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
 if (pv.Value != null) { 
            
            #line default
            #line hidden
            
            #line 57 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pv.Value.GetType() == typeof(bool) ? pv.Value.ToString().ToLower() : pv.Value));
            
            #line default
            #line hidden
            
            #line 57 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
 } else { 
            
            #line default
            #line hidden
            this.Write(" default(");
            
            #line 57 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pv.Type));
            
            #line default
            #line hidden
            this.Write(") ");
            
            #line 57 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
 }
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 58 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

			}
			else if (keyValue.Value is IObjectParameter op)
			{
				

            
            #line default
            #line hidden
            this.Write("\t\t\t");
            
            #line 64 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(op.Type));
            
            #line default
            #line hidden
            this.Write("? ");
            
            #line 64 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetVariableName(keyValue.Value)));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 64 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
 if (!op.GetIsNull()) { objectsToInitialize.Add(op); 
            
            #line default
            #line hidden
            this.Write("Create_");
            
            #line 64 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(keyValue.Key));
            
            #line default
            #line hidden
            this.Write("(out Mock<");
            
            #line 64 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(op.Type));
            
            #line default
            #line hidden
            this.Write("> methodsMock_");
            
            #line 64 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(keyValue.Key));
            
            #line default
            #line hidden
            this.Write(")");
            
            #line 64 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
 } else {  
            
            #line default
            #line hidden
            this.Write("null");
            
            #line 64 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 65 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

			}
			else if (keyValue.Value is IArrayParameter ap)
			{

            
            #line default
            #line hidden
            this.Write("\t\t\t");
            
            #line 70 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ap.ElementType));
            
            #line default
            #line hidden
            this.Write("[]? ");
            
            #line 70 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetVariableName(keyValue.Value)));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 70 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
 if (!ap.GetIsNull()) { arraysToInitialize.Add(ap); 
            
            #line default
            #line hidden
            this.Write("Create_");
            
            #line 70 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(keyValue.Key));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 70 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ap.GetLength()));
            
            #line default
            #line hidden
            this.Write(")");
            
            #line 70 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
 } else {  
            
            #line default
            #line hidden
            this.Write("null");
            
            #line 70 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 71 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

			}
			else
			{
				// 
			}

            
            #line default
            #line hidden
            this.Write("\t\t\t\r\n");
            
            #line 79 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

		}

            
            #line default
            #line hidden
            this.Write("\t\t\t// initialize all parameters which needs initialization\r\n\t\t\t// TODO: initializ" +
                    "e return value comparer instance\r\n\t\t\t\r\n");
            
            #line 85 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

		foreach (var op in objectsToInitialize)
		{
			int i = op.GetFields().Count;
			if (i > 0)
			{


            
            #line default
            #line hidden
            this.Write("\t\t\tInitializeFields_");
            
            #line 93 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(op.Reference));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t(\r\n\t\t\t\t");
            
            #line 95 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetVariableName(op.Reference, startingCtx)));
            
            #line default
            #line hidden
            this.Write(",\r\n");
            
            #line 96 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

				foreach (var fi in op.GetFields())
				{
					--i;

            
            #line default
            #line hidden
            this.Write("\t\t\t\targ_");
            
            #line 101 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(fi.Key));
            
            #line default
            #line hidden
            this.Write(": ");
            
            #line 101 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetVariableName(fi.Value, startingCtx)));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 101 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i > 0 ? "," : ""));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 102 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

				}

            
            #line default
            #line hidden
            this.Write("\t\t\t);\r\n\r\n");
            
            #line 107 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

			}

			KeyValuePair<MethodSignature, ParameterRef[]>[] results = op.GetMethodResults().Where(p => p.Value.Length > 0 && !p.Value.All(r => r == ParameterRef.Empty)).ToArray();

			i = results.Length;
			if (i > 0)
			{

            
            #line default
            #line hidden
            this.Write("\t\t\tInitializeMethods_");
            
            #line 116 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(op.Reference));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t(\r\n\t\t\t\tmethodsMock_");
            
            #line 118 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(op.Reference));
            
            #line default
            #line hidden
            this.Write(",\r\n");
            
            #line 119 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

				foreach (var mi in results)
				{
					--i;

            
            #line default
            #line hidden
            this.Write("\t\t\t\targ_");
            
            #line 124 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(mi.Key.MethodName));
            
            #line default
            #line hidden
            this.Write(": new ");
            
            #line 124 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(mi.Key.ReturnTypeFullName));
            
            #line default
            #line hidden
            this.Write("[] { ");
            
            #line 124 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
 
					
					int j = mi.Value.Length;
					foreach (var r in mi.Value)
					{
						--j;
						if (r == ParameterRef.Empty)
						{

            
            #line default
            #line hidden
            this.Write(" default(");
            
            #line 132 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(mi.Key.ReturnTypeFullName));
            
            #line default
            #line hidden
            this.Write(")");
            
            #line 132 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(j > 0 ? "," : ""));
            
            #line default
            #line hidden
            
            #line 132 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

						}
						else
						{

            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 136 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetVariableName(r, startingCtx)));
            
            #line default
            #line hidden
            
            #line 136 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(j > 0 ? "," : ""));
            
            #line default
            #line hidden
            
            #line 136 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

						}
					}


            
            #line default
            #line hidden
            this.Write(" } ");
            
            #line 140 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i > 0 ? "," : ""));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 141 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

				}

            
            #line default
            #line hidden
            this.Write("\t\t\t);\r\n");
            
            #line 145 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

			}
		}

		foreach (var ap in arraysToInitialize)
		{
			int i = ap.GetItems().Length;
			if (i > 0)
			{

            
            #line default
            #line hidden
            this.Write("\t\t\tInitializeItems_");
            
            #line 155 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ap.Reference));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t(\r\n\t\t\t\t");
            
            #line 157 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetVariableName(ap.Reference, startingCtx)));
            
            #line default
            #line hidden
            this.Write(",\r\n");
            
            #line 158 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

				foreach (var item in ap.GetItems())
				{
					--i;
					if (item == ParameterRef.Empty)
					{

            
            #line default
            #line hidden
            this.Write("\t\t\t\tdefault(");
            
            #line 165 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ap.ElementType));
            
            #line default
            #line hidden
            this.Write(")");
            
            #line 165 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i > 0 ? "," : ""));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 166 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

					}
					else
					{

            
            #line default
            #line hidden
            this.Write("\t\t\t\t");
            
            #line 171 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetVariableName(item, startingCtx)));
            
            #line default
            #line hidden
            
            #line 171 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i > 0 ? "," : ""));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 172 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

					}
				}

            
            #line default
            #line hidden
            this.Write("\t\t\t);\r\n");
            
            #line 177 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

			}
		}

            
            #line default
            #line hidden
            this.Write("\t\t\t// execute the tested method\r\n\t\t\t// TODO: make assert for method exception\r\n\t\t" +
                    "\t// TODO: make assert for method return values\r\n\t\t\t// TODO: handle instance meth" +
                    "ods\r\n");
            
            #line 185 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

		if (TestData.SUTMethod.IsStatic)
		{
			if (TestData.SUTMethod.ReturnType == typeof(void))
			{

            
            #line default
            #line hidden
            this.Write("\t\t\t");
            
            #line 191 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TestData.SUTType.FullName));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 191 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TestData.SUTMethod.Name));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 191 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(BuildExecutionArgs(TestData.SUTMethod, startingCtx)));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 192 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

			}
			else
			{

            
            #line default
            #line hidden
            this.Write("\t\t\tvar result = ");
            
            #line 197 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TestData.SUTType.FullName));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 197 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TestData.SUTMethod.Name));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 197 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(BuildExecutionArgs(TestData.SUTMethod, startingCtx)));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 198 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

			}
		}

            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t// construct all output parameters which are used in the test\r\n\t\t\t// 1. ret " +
                    "val if exists\r\n");
            
            #line 205 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

			if (TestData.SUTMethod.ReturnType != typeof(void))
			{
				if (endingCtx.Roots.TryGetValue("RetVal", out ParameterRef retValueRef))
				{
					IParameter retParamter = retValueRef.Resolve(endingCtx);

					if (retParamter is IPrimitiveValueParameter pv)
					{

            
            #line default
            #line hidden
            this.Write("\t\t\t");
            
            #line 215 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pv.Type));
            
            #line default
            #line hidden
            this.Write("  retValue = ");
            
            #line 215 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
 if (pv.Value != null) { 
            
            #line default
            #line hidden
            
            #line 215 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pv.Value.GetType() == typeof(bool) ? pv.Value.ToString().ToLower() : pv.Value));
            
            #line default
            #line hidden
            
            #line 215 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
 } else { 
            
            #line default
            #line hidden
            this.Write(" default(");
            
            #line 215 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pv.Type));
            
            #line default
            #line hidden
            this.Write(") ");
            
            #line 215 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
 }
            
            #line default
            #line hidden
            this.Write(";\r\n\t\t\tAssert.Equal(result, retValue);\r\n");
            
            #line 217 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

					}
					else if (retParamter is IObjectParameter op)
					{

            
            #line default
            #line hidden
            this.Write("\t\t\t// ");
            
            #line 222 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(op.Type));
            
            #line default
            #line hidden
            this.Write("? retValue = ");
            
            #line 222 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
 if (!op.GetIsNull()) { objectsToInitialize.Add(op); 
            
            #line default
            #line hidden
            this.Write("Create_");
            
            #line 222 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(retParamter.Reference));
            
            #line default
            #line hidden
            this.Write("(out _ ");
            
            #line 222 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
 } else {  
            
            #line default
            #line hidden
            this.Write("null");
            
            #line 222 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write(";\r\n\t\t\t// TODO: create return value for non primitive values & do as much assertio" +
                    "ns as possible\r\n");
            
            #line 224 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

					}
					else if (retParamter is IArrayParameter ap)
					{

            
            #line default
            #line hidden
            this.Write("\t\t\t// ");
            
            #line 229 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ap.ElementType));
            
            #line default
            #line hidden
            this.Write("[]? retValue = ");
            
            #line 229 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
 if (!ap.GetIsNull()) { arraysToInitialize.Add(ap); 
            
            #line default
            #line hidden
            this.Write("Create_");
            
            #line 229 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(retParamter.Reference));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 229 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ap.GetLength()));
            
            #line default
            #line hidden
            this.Write(")");
            
            #line 229 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
 } else {  
            
            #line default
            #line hidden
            this.Write("null");
            
            #line 229 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write(";\r\n\t\t\t// TODO: create return value for non primitive values & do as much assertio" +
                    "ns as possible\r\n");
            
            #line 231 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

					}


            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 236 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

				}
				else
				{

            
            #line default
            #line hidden
            this.Write("\t\t\t// ERROR: method has a return type but no return value is specified!!!! Maybe " +
                    "because it returns another parametrized value and the alias parameter is not yet" +
                    " implemented.\r\n");
            
            #line 242 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

				}
			}

            
            #line default
            #line hidden
            this.Write("\r\n\r\n\t\t}\r\n");
            
            #line 249 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

	}

            
            #line default
            #line hidden
            this.Write("\t\t#endregion Test Methods\r\n\r\n\t\t#region Parameter Creation Methods\r\n\t\t// these met" +
                    "hods constructs instances of parameters along with interfaces for their initiali" +
                    "zation\r\n");
            
            #line 256 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

	foreach (var keyValue in TestData.Initializations)
	{
		if (keyValue.Value is PrimitiveValueInitializationInfo) 
		{
			// we do not need construction method for primitive values
			continue;
		}

		if (keyValue.Value is ObjectInitializationInfo objectInitialization)
		{
			WriteObjectConstruction(objectInitialization);
		}
		else if (keyValue.Value is ArrayInitializationInfo arrayInitialization)
		{
			WriteArrayConstruction(arrayInitialization);
		}

            
            #line default
            #line hidden
            this.Write("\t\t\r\n");
            
            #line 275 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

		}

            
            #line default
            #line hidden
            this.Write("\r\n\r\n\t\t#endregion Parameter Creation Methods\r\n\r\n\t\t#region Parameter Initialization" +
                    " Methods\r\n");
            
            #line 283 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

	// Setup initialization functions for each non-primitive parameter
	foreach (var keyValue in TestData.Initializations)
	{
		if (keyValue.Value is PrimitiveValueInitializationInfo) 
		{
			// we do not need initialization method for primitive values
			continue;
		}

            
            #line default
            #line hidden
            this.Write("\t\t// initialize parameter ");
            
            #line 293 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(keyValue.Key));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 294 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

		if (keyValue.Value.Accesses.Count > 0)
		{
			foreach (string access in keyValue.Value.Accesses)
			{

            
            #line default
            #line hidden
            this.Write("\t\t// - ");
            
            #line 300 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(access));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 301 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

			}
		}

		if (keyValue.Value is ObjectInitializationInfo objectInitialization)
		{
			WriteObjectIntialization(objectInitialization);
		}
		else if (keyValue.Value is ArrayInitializationInfo arrayIntialization)
		{
			WriteArrayInitialization(arrayIntialization);
		}

            
            #line default
            #line hidden
            
            #line 314 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

	}

            
            #line default
            #line hidden
            this.Write("\t\t#endregion Parameter Initialization Methods\r\n\t}\r\n}\r\n\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 321 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

	// Methods
	private string BuildArgumentsSignature(Type[] argTypes, string[] argNames)
	{
		IEnumerable<string> argDeclarations = argTypes
			//.Select((t, i) => $"{t.FullName} {argNames[i]} = default({t.FullName})");
			.Select((t, i) => $"{t.FullName} {argNames[i]} = default");

		return string.Join(", ", argDeclarations);
	}	

	private string BuildAnyMockArguments(MethodInfo method)
	{
		IEnumerable<string> args = method.GetParameters().Select(p => $"It.IsAny<{p.ParameterType.FullName}>()");

		return string.Join(", ", args);
	}

        
        #line default
        #line hidden
        
        #line 339 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

	private void WriteObjectConstruction(ObjectInitializationInfo objectInitialization)
	{

		string instanceType = objectInitialization.ExpectedType.FullName;
		
		// add possibility to override construction?? how exactly?

        
        #line default
        #line hidden
        
        #line 346 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write("\t\tprivate ");

        
        #line default
        #line hidden
        
        #line 347 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(instanceType));

        
        #line default
        #line hidden
        
        #line 347 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write(" Create_");

        
        #line default
        #line hidden
        
        #line 347 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(objectInitialization.Reference));

        
        #line default
        #line hidden
        
        #line 347 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write("(out Mock<");

        
        #line default
        #line hidden
        
        #line 347 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(instanceType));

        
        #line default
        #line hidden
        
        #line 347 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write("> methodsMock)\r\n\t\t{\r\n\t\t\tmethodsMock = new Mock<");

        
        #line default
        #line hidden
        
        #line 349 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(instanceType));

        
        #line default
        #line hidden
        
        #line 349 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write(">();\r\n\t\t\tvar instance = methodsMock.Object;\r\n\t\t\treturn instance;\r\n\t\t}\r\n");

        
        #line default
        #line hidden
        
        #line 353 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

	}

        
        #line default
        #line hidden
        
        #line 356 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

	private void WriteObjectIntialization(ObjectInitializationInfo objectInitialization)
	{
		// we need to write the initialization method signature
		// we know which fields we want to use and which method we want to mock

		string instanceType = $"{objectInitialization.ExpectedType.FullName}";
		string instanceName = $"instance_{objectInitialization.Reference}";

		if (objectInitialization.UsedFields.Count > 0)
		{
			Type[] argTypes = objectInitialization.UsedFields.Select(fi => fi.FieldType).ToArray();
			string[] argNames = objectInitialization.UsedFields.Select(fi => "arg_" + fi.Name).ToArray();

        
        #line default
        #line hidden
        
        #line 369 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write("\t\tprivate void InitializeFields_");

        
        #line default
        #line hidden
        
        #line 370 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(objectInitialization.Reference));

        
        #line default
        #line hidden
        
        #line 370 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write("(");

        
        #line default
        #line hidden
        
        #line 370 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(objectInitialization.ExpectedType.FullName));

        
        #line default
        #line hidden
        
        #line 370 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write(" instance, ");

        
        #line default
        #line hidden
        
        #line 370 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(BuildArgumentsSignature(argTypes, argNames)));

        
        #line default
        #line hidden
        
        #line 370 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write(")\r\n\t\t{\r\n\t\t\t// initialize field using private object\r\n");

        
        #line default
        #line hidden
        
        #line 373 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

			foreach (var fi in objectInitialization.UsedFields)
			{
				string fieldName = fi.Name;

        
        #line default
        #line hidden
        
        #line 377 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write("\t\t\tinstance.SetPrivate(\"");

        
        #line default
        #line hidden
        
        #line 378 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(fieldName));

        
        #line default
        #line hidden
        
        #line 378 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write("\", arg_");

        
        #line default
        #line hidden
        
        #line 378 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(fieldName));

        
        #line default
        #line hidden
        
        #line 378 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write(");\r\n");

        
        #line default
        #line hidden
        
        #line 379 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

			}

        
        #line default
        #line hidden
        
        #line 381 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write("\t\t}\r\n");

        
        #line default
        #line hidden
        
        #line 383 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

		}

		if (objectInitialization.InvokedMethods.Count > 0)
		{
			var methods = objectInitialization.InvokedMethods.Where(p => p.Value >= 1).Select<KeyValuePair<MethodInfo, int>, (MethodInfo method, string arg)>(p => (p.Key, "arg_" + p.Key.Name)).ToArray();

			Type[] argTypes = methods.Select(m => m.method.ReturnType.MakeArrayType()).ToArray();
			string[] argNames = methods.Select(m => m.arg).ToArray();

        
        #line default
        #line hidden
        
        #line 392 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write("\t\tprivate void InitializeMethods_");

        
        #line default
        #line hidden
        
        #line 393 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(objectInitialization.Reference));

        
        #line default
        #line hidden
        
        #line 393 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write("(Mock<");

        
        #line default
        #line hidden
        
        #line 393 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(instanceType));

        
        #line default
        #line hidden
        
        #line 393 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write("> mock, ");

        
        #line default
        #line hidden
        
        #line 393 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(BuildArgumentsSignature(argTypes, argNames)));

        
        #line default
        #line hidden
        
        #line 393 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write(")\r\n\t\t{\r\n\t\t\t// TODO: initialize method results to correspond to provided values\r\n\t" +
        "\t\t// first invocation returns arg_<MethodName>[0] etc\r\n\t\t\t// right now, always r" +
        "eturn first element... :(\r\n");

        
        #line default
        #line hidden
        
        #line 398 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

			foreach ((MethodInfo method, string arg) in methods)
			{
				

        
        #line default
        #line hidden
        
        #line 402 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write("\t\t\tmock.Setup(o => o.");

        
        #line default
        #line hidden
        
        #line 403 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(method.Name));

        
        #line default
        #line hidden
        
        #line 403 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write("(");

        
        #line default
        #line hidden
        
        #line 403 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(BuildAnyMockArguments(method)));

        
        #line default
        #line hidden
        
        #line 403 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write(")).Returns(");

        
        #line default
        #line hidden
        
        #line 403 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(arg));

        
        #line default
        #line hidden
        
        #line 403 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write("[0]);\r\n");

        
        #line default
        #line hidden
        
        #line 404 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

			}

        
        #line default
        #line hidden
        
        #line 406 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write("\t\t}\r\n");

        
        #line default
        #line hidden
        
        #line 408 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

		}
	}

        
        #line default
        #line hidden
        
        #line 412 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

	private void WriteArrayConstruction(ArrayInitializationInfo arrayInitialization)
	{

        
        #line default
        #line hidden
        
        #line 415 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write("\t\tprivate ");

        
        #line default
        #line hidden
        
        #line 416 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(arrayInitialization.ExpectedElementType.FullName));

        
        #line default
        #line hidden
        
        #line 416 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write("[] Create_");

        
        #line default
        #line hidden
        
        #line 416 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(arrayInitialization.Reference));

        
        #line default
        #line hidden
        
        #line 416 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write("(int length)\r\n\t\t{\r\n\t\t\treturn new ");

        
        #line default
        #line hidden
        
        #line 418 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(arrayInitialization.ExpectedElementType.FullName));

        
        #line default
        #line hidden
        
        #line 418 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write("[length];\r\n\t\t}\r\n");

        
        #line default
        #line hidden
        
        #line 420 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

	}

        
        #line default
        #line hidden
        
        #line 423 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

	private void WriteArrayInitialization(ArrayInitializationInfo arrayInitialization)
	{
		// we need to write the initialization method signature
		// we know which fields we want to use and which method we want to mock

        
        #line default
        #line hidden
        
        #line 428 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write("\t\tprivate void InitializeItems_");

        
        #line default
        #line hidden
        
        #line 429 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(arrayInitialization.Reference));

        
        #line default
        #line hidden
        
        #line 429 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write("(");

        
        #line default
        #line hidden
        
        #line 429 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(arrayInitialization.ExpectedElementType.FullName));

        
        #line default
        #line hidden
        
        #line 429 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write("[] array, params ");

        
        #line default
        #line hidden
        
        #line 429 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(arrayInitialization.ExpectedElementType.FullName));

        
        #line default
        #line hidden
        
        #line 429 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"
this.Write("[] items)\r\n\t\t{\r\n\t\t\titems.CopyTo(array, System.Math.Min(items.Length, array.Length" +
        "));\r\n\t\t}\r\n");

        
        #line default
        #line hidden
        
        #line 433 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

	}

        
        #line default
        #line hidden
        
        #line 436 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

	private string BuildExecutionArgs(MethodInfo method, IParameterSet context)
	{
		IEnumerable<string> refs = method.GetParameters().Select(p => p.Name);
		return string.Join(", ", refs);
	}

        
        #line default
        #line hidden
        
        #line 443 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator\XUnit\XUnitTestClassTemplate.tt"

	private string GetVariableName(ParameterRef reference, IParameterSet context)
	{
		return GetVariableName(reference.Resolve(context));
	}

	private string GetVariableName(IParameter parameter)
	{
		if (parameter.IsRoot(out MethodArgumentParameterAccessor[] arg))
		{
			return arg[0].Expression;
		}
		else if (parameter.IsRoot(out ReturnValueParameterAccessor[] rv))
		{
			return rv[0].Expression;
		}

		return $"var_{parameter.Reference}";
	}

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public class XUnitTestClassTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
