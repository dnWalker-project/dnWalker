<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension="tt.cs" #>
<#
    string[] primitives = new[]
    {
        "String",
        "Char",
        "Boolean",
        "Byte",
        "SByte",
        "UInt16",
        "Int16",
        "UInt32",
        "Int32",
        "UInt64",
        "Int64",
        "Double",
        "Single"
    };
#>
using dnlib.DotNet;

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace dnWalker.TypeSystem
{
    public readonly partial struct TypeSignature
    {
<#
    foreach (string p in primitives)
    {
#>
        public bool Is<#= p #>
        {
            get
            {
                return _type != null && new SigComparer().Equals(_type, _type.Module.CorLibTypes.<#= p #>);
            }
        }
<#
    }
#>
    }
}