// This file was generated by dnWalker.TestGenerator tool 09. 01. 2022 - 09:51:08
#nullable enable

using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;

using FluentAssertions;

using Xunit;

using Moq;

namespace Examples.Concolic.Features.Interfaces.Tests
{
	public class MethodsWithInterfaceParameter_Tests_Interface_AbstractMethod
	{
		#region Test Methods

		[Fact]
		public void Test_Iteration_1()
		{
			// construct all input parameters which are used in the test
			// TODO: construct return value comparer instance
			Examples.Concolic.Features.Interfaces.IMyInterface? instance = null;
			
			// initialize all parameters which needs initialization
			// TODO: initialize return value comparer instance
			
			// execute the tested method
			// TODO: make assert for method exception
			// TODO: make assert for method return values
			// TODO: handle instance methods
			Examples.Concolic.Features.Interfaces.MethodsWithInterfaceParameter.Interface_AbstractMethod(instance);

			// construct all output parameters which are used in the test
			// 1. ret val if exists


		}

		[Fact]
		public void Test_Iteration_2()
		{
			// construct all input parameters which are used in the test
			// TODO: construct return value comparer instance
			Examples.Concolic.Features.Interfaces.IMyInterface? instance = Create_0x00000001(out Mock<Examples.Concolic.Features.Interfaces.IMyInterface> methodsMock_0x00000001);
			
			// initialize all parameters which needs initialization
			// TODO: initialize return value comparer instance
			
			// execute the tested method
			// TODO: make assert for method exception
			// TODO: make assert for method return values
			// TODO: handle instance methods
			Examples.Concolic.Features.Interfaces.MethodsWithInterfaceParameter.Interface_AbstractMethod(instance);

			// construct all output parameters which are used in the test
			// 1. ret val if exists


		}

		[Fact]
		public void Test_Iteration_3()
		{
			// construct all input parameters which are used in the test
			// TODO: construct return value comparer instance
			Examples.Concolic.Features.Interfaces.IMyInterface? instance = Create_0x00000001(out Mock<Examples.Concolic.Features.Interfaces.IMyInterface> methodsMock_0x00000001);
			
			System.Int32 var_0x00000002 = 2;
			
			System.Int32 var_0x00000003 = 135;
			
			// initialize all parameters which needs initialization
			// TODO: initialize return value comparer instance
			
			InitializeMethods_0x00000001
			(
				methodsMock_0x00000001,
				arg_AbstractMethod: new System.Int32[] {  var_0x00000002, var_0x00000003 } 
			);
			// execute the tested method
			// TODO: make assert for method exception
			// TODO: make assert for method return values
			// TODO: handle instance methods
			Examples.Concolic.Features.Interfaces.MethodsWithInterfaceParameter.Interface_AbstractMethod(instance);

			// construct all output parameters which are used in the test
			// 1. ret val if exists


		}

		[Fact]
		public void Test_Iteration_4()
		{
			// construct all input parameters which are used in the test
			// TODO: construct return value comparer instance
			Examples.Concolic.Features.Interfaces.IMyInterface? instance = Create_0x00000001(out Mock<Examples.Concolic.Features.Interfaces.IMyInterface> methodsMock_0x00000001);
			
			System.Int32 var_0x00000002 = 3;
			
			System.Int32 var_0x00000003 = 135;
			
			// initialize all parameters which needs initialization
			// TODO: initialize return value comparer instance
			
			InitializeMethods_0x00000001
			(
				methodsMock_0x00000001,
				arg_AbstractMethod: new System.Int32[] {  var_0x00000002, var_0x00000003 } 
			);
			// execute the tested method
			// TODO: make assert for method exception
			// TODO: make assert for method return values
			// TODO: handle instance methods
			Examples.Concolic.Features.Interfaces.MethodsWithInterfaceParameter.Interface_AbstractMethod(instance);

			// construct all output parameters which are used in the test
			// 1. ret val if exists


		}
		#endregion Test Methods

		#region Parameter Creation Methods
		// these methods constructs instances of parameters along with interfaces for their initialization
		private Examples.Concolic.Features.Interfaces.IMyInterface Create_0x00000001(out Mock<Examples.Concolic.Features.Interfaces.IMyInterface> methodsMock)
		{
			methodsMock = new Mock<Examples.Concolic.Features.Interfaces.IMyInterface>();
			var instance = methodsMock.Object;
			return instance;
		}
		


		#endregion Parameter Creation Methods

		#region Parameter Initialization Methods
		// initialize parameter 0x00000001
		// - instance
		private void InitializeMethods_0x00000001(Mock<Examples.Concolic.Features.Interfaces.IMyInterface> mock, System.Int32[] arg_AbstractMethod = default)
		{
			// TODO: initialize method results to correspond to provided values
			// first invocation returns arg_<MethodName>[0] etc
			// right now, always return first element... :(
			mock.Setup(o => o.AbstractMethod()).Returns(arg_AbstractMethod[0]);
		}
		#endregion Parameter Initialization Methods
	}
}


