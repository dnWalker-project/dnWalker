// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace dnWalker.TestGenerator.XunitProvider
{
    using System;
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using dnWalker.TestGenerator.Templates;
    using dnWalker.TestGenerator.TestClasses;
    using dnWalker.TestGenerator.TestClasses.Schemas;
    using dnWalker.TestGenerator.TestFrameworks;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator.XunitProvider\XunitTestClassTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    internal partial class XunitTestClassTemplate : dnWalker.TestGenerator.TestClasses.TestClassTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("\n");
            this.Write("\n");
            this.Write("\n");
            this.Write("\n");
            this.Write("\n");
            this.Write("\n");
            this.Write("\n");
            this.Write("\n");
            this.Write("\n");
            this.Write("\n");
            
            #line 1 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator.XunitProvider\XunitTestClassTemplate.tt"

            // generate usings

            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator.XunitProvider\XunitTestClassTemplate.tt"

            foreach (IEnumerable<string> nsGroup in GetNamespaces())
            {
                foreach (string ns in nsGroup)
                {

            
            #line default
            #line hidden
            this.Write("\nusing ");
            
            #line 1 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator.XunitProvider\XunitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ns));
            
            #line default
            #line hidden
            this.Write(";\n");
            
            #line 1 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator.XunitProvider\XunitTestClassTemplate.tt"

            }

            
            #line default
            #line hidden
            this.Write("\n\n");
            
            #line 1 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator.XunitProvider\XunitTestClassTemplate.tt"

        }

            
            #line default
            #line hidden
            this.Write("\n\n");
            
            #line 1 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator.XunitProvider\XunitTestClassTemplate.tt"

            // declare test namespace

            
            #line default
            #line hidden
            this.Write("\nnamespace ");
            
            #line 1 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator.XunitProvider\XunitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Context.TestNamespaceName));
            
            #line default
            #line hidden
            this.Write("\n{\n");
            
            #line 1 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator.XunitProvider\XunitTestClassTemplate.tt"

            // declare test class

            
            #line default
            #line hidden
            this.Write("\n    public class ");
            
            #line 1 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator.XunitProvider\XunitTestClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Context.TestClassName));
            
            #line default
            #line hidden
            this.Write("\n    {\n\n");
            
            #line 1 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator.XunitProvider\XunitTestClassTemplate.tt"

            // for each schema create a method

            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Users\hejlb\Documents\CVUT-FEL\MGR\Diplomka\src\dnWalker\dnWalker.TestGenerator.XunitProvider\XunitTestClassTemplate.tt"

            PushIndent();
            PushIndent();
            PushIndent();
            foreach (TestSchema schema in Context.GetSchemas())
            {
                // foreach (var attInfo in GetTestMethodAttributes())
                // Write(attInfo);
                WriteLine("[Fact]");
                schema.WriteTestMethodHeader(this);
                schema.WriteTestMethodBody(this, TemplateProvider);
                schema.WriteTestMethodFooter(this);
            }
            PopIndent();
            PopIndent();
            PopIndent();

            
            #line default
            #line hidden
            this.Write("\n    }\n}\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
